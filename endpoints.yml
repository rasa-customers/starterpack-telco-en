# This file contains the different endpoints your bot can use.

# Server where the models are pulled from.
# https://rasa.com/docs/rasa-pro/production/model-storage#fetching-models-from-a-server

#models:
#  url: http://my-server.com/models/default_core@latest
#  wait_time_between_pulls:  10   # [optional](default: 100)

# Server which runs your custom actions.
# https://rasa.com/docs/rasa-pro/concepts/custom-actions
action_endpoint:
  actions_module: "actions"
  # You can use url endpoint to have a separate action server for debugging
  # url: http://localhost:5055/webhook

# Allow and what LLM handles rephrasing of responses
nlg:
  type: rephrase
  llm:
    model_group: gpt-4o-mini
  # To override the default rephraser prompt
  #prompt: prompts/rephraser_demo_personality_prompt.jinja2

# Model Groups - Integrate with different LLM providers
# https://rasa.com/docs/reference/config/components/llm-configuration/#model-groups
# e.g. https://platform.openai.com/docs/models
model_groups:
  - id: openai-direct-gpt-4o
    models:
      - provider: openai
        model: gpt-4o-2024-11-20
        timeout: 7
        temperature: 0.0
        top_p: 0.0
  - id: gpt-4o-mini
    models:
      - provider: openai
        model: gpt-4o-mini-2024-07-18
        temperature: 0.3
  # - id: openai_embeddings
  #   models:
  #     - provider: openai
  #       model: text-embedding-ada-002

# Tracker store which is used to store the conversations.
# By default the conversations are stored in memory.
# https://rasa.com/docs/rasa-pro/production/tracker-stores

#tracker_store:
#    type: redis
#    url: <host of the redis instance, e.g. localhost>
#    port: <port of your redis instance, usually 6379>
#    db: <number of your database within redis, e.g. 0>
#    password: <password used for authentication>
#    use_ssl: <whether or not the communication is encrypted, default false>

#tracker_store:
#    type: mongod
#    url: <url to your mongo instance, e.g. mongodb://localhost:27017>
#    db: <name of the db within your mongo instance, e.g. rasa>
#    username: <username used for authentication>
#    password: <password used for authentication>

# Event broker which all conversation events should be streamed to.
# https://rasa.com/docs/rasa-pro/production/event-brokers

#event_broker:
#  url: localhost
#  username: username
#  password: password
#  queue: queue
